#define _CRT_SECURE_NO_DEPRECATE  
#define _CRT_NONSTDC_NO_DEPRECATE
#include <iostream>
#include <vector>
using namespace std;
class Vector
{
private:

	char* m_mas;
	int m_size = 0;
	int m_vvod = 0;
	

public:
	Vector()
	{
		m_mas = new char[0];
	}

	Vector(int size)
	{
		m_vvod = size;
		m_size = (size / 8) + 1;
		m_mas = new char[m_size];
		for (int i = 0; i < m_size; i++)
		{
			m_mas[i] = 0b00000001;
		}

	}
	void pushBack(bool a)
	{
		if (m_vvod % 8 == 0)
		{
			char* newStr = new char[m_size + 1];
			for (int i = 0; i < m_size; i++) {
				newStr[i] = m_mas[i];
			}
			//std::copy(m_mas, m_mas + m_size, newStr);
			delete[] m_mas;
			m_mas = newStr;
			if (a == 1)
			{
				m_mas[m_size] = 0b00000001;
			}
			else
			{
				m_mas[m_size] = 0b01000000;
			}
			m_size++;
		}
		else
		{
			if (a == 1)
			{
				m_mas[m_size - 1] = m_mas[m_size - 1] | ((1 << m_vvod - 8 * (m_size - 1)));
			}
			else
			{
				cout << "Error";
			}
		}

		m_vvod++;

	}
	void write()
	{
		for (int i = 0; i < m_size; i++)
		{
			cout << m_mas << endl;
		}
	}
};
int main()
{
	Vector Vector1(10);
	Vector1.pushBack(1);
	Vector1.write();
}
